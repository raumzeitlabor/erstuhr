
image.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004a6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  000004a6  0000053a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800064  00800064  0000053e  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  0000053e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000000a0  00000000  00000000  0000055e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000140  00000000  00000000  000005fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000008e  00000000  00000000  0000073e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000023c  00000000  00000000  000007cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000060  00000000  00000000  00000a08  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000fd  00000000  00000000  00000a68  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__vector_7>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 76 00 	jmp	0xec	; 0xec <__vector_10>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a4 e6       	ldi	r26, 0x64	; 100
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	aa 36       	cpi	r26, 0x6A	; 106
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
  70:	10 e0       	ldi	r17, 0x00	; 0
  72:	a0 e6       	ldi	r26, 0x60	; 96
  74:	b0 e0       	ldi	r27, 0x00	; 0
  76:	e6 ea       	ldi	r30, 0xA6	; 166
  78:	f4 e0       	ldi	r31, 0x04	; 4
  7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
  7c:	05 90       	lpm	r0, Z+
  7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
  80:	a4 36       	cpi	r26, 0x64	; 100
  82:	b1 07       	cpc	r27, r17
  84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
  86:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <main>
  8a:	0c 94 51 02 	jmp	0x4a2	; 0x4a2 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__vector_7>:
        break;
    }
  }
}

SIGNAL(SIG_OUTPUT_COMPARE1A){
  92:	1f 92       	push	r1
  94:	0f 92       	push	r0
  96:	0f b6       	in	r0, 0x3f	; 63
  98:	0f 92       	push	r0
  9a:	11 24       	eor	r1, r1
  9c:	8f 93       	push	r24
  sekunden++;
  9e:	80 91 65 00 	lds	r24, 0x0065
  a2:	8f 5f       	subi	r24, 0xFF	; 255
  a4:	80 93 65 00 	sts	0x0065, r24
  if (sekunden > 59){
  a8:	80 91 65 00 	lds	r24, 0x0065
  ac:	8c 33       	cpi	r24, 0x3C	; 60
  ae:	38 f0       	brcs	.+14     	; 0xbe <__vector_7+0x2c>
    sekunden = 0;
  b0:	10 92 65 00 	sts	0x0065, r1
    minuten++;
  b4:	80 91 66 00 	lds	r24, 0x0066
  b8:	8f 5f       	subi	r24, 0xFF	; 255
  ba:	80 93 66 00 	sts	0x0066, r24
  }
  if (minuten > 59){
  be:	80 91 66 00 	lds	r24, 0x0066
  c2:	8c 33       	cpi	r24, 0x3C	; 60
  c4:	38 f0       	brcs	.+14     	; 0xd4 <__vector_7+0x42>
    minuten = 0;
  c6:	10 92 66 00 	sts	0x0066, r1
    stunden++;
  ca:	80 91 68 00 	lds	r24, 0x0068
  ce:	8f 5f       	subi	r24, 0xFF	; 255
  d0:	80 93 68 00 	sts	0x0068, r24
  }
  if (stunden > 23){
  d4:	80 91 68 00 	lds	r24, 0x0068
  d8:	88 31       	cpi	r24, 0x18	; 24
  da:	10 f0       	brcs	.+4      	; 0xe0 <__vector_7+0x4e>
    stunden = 0;
  dc:	10 92 68 00 	sts	0x0068, r1
  }
}
  e0:	8f 91       	pop	r24
  e2:	0f 90       	pop	r0
  e4:	0f be       	out	0x3f, r0	; 63
  e6:	0f 90       	pop	r0
  e8:	1f 90       	pop	r1
  ea:	18 95       	reti

000000ec <__vector_10>:

SIGNAL(SIG_OUTPUT_COMPARE0){  
  ec:	1f 92       	push	r1
  ee:	0f 92       	push	r0
  f0:	0f b6       	in	r0, 0x3f	; 63
  f2:	0f 92       	push	r0
  f4:	11 24       	eor	r1, r1
  f6:	6f 93       	push	r22
  f8:	7f 93       	push	r23
  fa:	8f 93       	push	r24
  fc:	9f 93       	push	r25
  if((++anti_prell%12)==0){
  fe:	80 91 64 00 	lds	r24, 0x0064
 102:	8f 5f       	subi	r24, 0xFF	; 255
 104:	80 93 64 00 	sts	0x0064, r24
 108:	80 91 64 00 	lds	r24, 0x0064
 10c:	6c e0       	ldi	r22, 0x0C	; 12
 10e:	0e 94 2a 01 	call	0x254	; 0x254 <__udivmodqi4>
 112:	99 23       	and	r25, r25
 114:	01 f5       	brne	.+64     	; 0x156 <__vector_10+0x6a>
    switch(PINB&0x0f){
 116:	86 b3       	in	r24, 0x16	; 22
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	8f 70       	andi	r24, 0x0F	; 15
 11c:	90 70       	andi	r25, 0x00	; 0
 11e:	8b 30       	cpi	r24, 0x0B	; 11
 120:	91 05       	cpc	r25, r1
 122:	99 f0       	breq	.+38     	; 0x14a <__vector_10+0x5e>
 124:	8c 30       	cpi	r24, 0x0C	; 12
 126:	91 05       	cpc	r25, r1
 128:	1c f4       	brge	.+6      	; 0x130 <__vector_10+0x44>
 12a:	07 97       	sbiw	r24, 0x07	; 7
 12c:	a1 f4       	brne	.+40     	; 0x156 <__vector_10+0x6a>
 12e:	09 c0       	rjmp	.+18     	; 0x142 <__vector_10+0x56>
 130:	8d 30       	cpi	r24, 0x0D	; 13
 132:	91 05       	cpc	r25, r1
 134:	21 f0       	breq	.+8      	; 0x13e <__vector_10+0x52>
 136:	0e 97       	sbiw	r24, 0x0e	; 14
 138:	71 f4       	brne	.+28     	; 0x156 <__vector_10+0x6a>
      case 0x0E: //button 1 -> sekunden
        modus = 1;
 13a:	81 e0       	ldi	r24, 0x01	; 1
 13c:	03 c0       	rjmp	.+6      	; 0x144 <__vector_10+0x58>
        break;
      case 0x0D: //button 2 -> minuten
        modus = 2;
 13e:	82 e0       	ldi	r24, 0x02	; 2
 140:	01 c0       	rjmp	.+2      	; 0x144 <__vector_10+0x58>
        break;
      case 0x07: //button 4 -> stunden
        modus = 3;
 142:	83 e0       	ldi	r24, 0x03	; 3
 144:	80 93 69 00 	sts	0x0069, r24
 148:	06 c0       	rjmp	.+12     	; 0x156 <__vector_10+0x6a>
        break;
      case 0x0B: //button 3 -> invertieren
        inverse = (inverse+1)&1;
 14a:	80 91 67 00 	lds	r24, 0x0067
 14e:	8f 5f       	subi	r24, 0xFF	; 255
 150:	81 70       	andi	r24, 0x01	; 1
 152:	80 93 67 00 	sts	0x0067, r24
        break;
    }
  }
}
 156:	9f 91       	pop	r25
 158:	8f 91       	pop	r24
 15a:	7f 91       	pop	r23
 15c:	6f 91       	pop	r22
 15e:	0f 90       	pop	r0
 160:	0f be       	out	0x3f, r0	; 63
 162:	0f 90       	pop	r0
 164:	1f 90       	pop	r1
 166:	18 95       	reti

00000168 <timer0_on>:

void timer0_on(){
  TCCR0 |= (1 << WGM01); //CTC Modus
 168:	83 b7       	in	r24, 0x33	; 51
 16a:	88 60       	ori	r24, 0x08	; 8
 16c:	83 bf       	out	0x33, r24	; 51
  TCCR0 |= (1 << CS00); // Prescaler auf 1024
 16e:	83 b7       	in	r24, 0x33	; 51
 170:	81 60       	ori	r24, 0x01	; 1
 172:	83 bf       	out	0x33, r24	; 51
  TCCR0 |= (1 << CS02); // Prescaler auf 1024
 174:	83 b7       	in	r24, 0x33	; 51
 176:	84 60       	ori	r24, 0x04	; 4
 178:	83 bf       	out	0x33, r24	; 51
  TIMSK |= (1 << OCIE0); // Interrupt auslösen wenn CTC-Match
 17a:	89 b7       	in	r24, 0x39	; 57
 17c:	82 60       	ori	r24, 0x02	; 2
 17e:	89 bf       	out	0x39, r24	; 57
  OCR0 = 150; //Schwellenwert für CTC
 180:	86 e9       	ldi	r24, 0x96	; 150
 182:	8c bf       	out	0x3c, r24	; 60
}
 184:	08 95       	ret

00000186 <timer1_on>:

void timer1_on(){
  TCCR1B |= (1 << WGM12); //CTC Modus
 186:	8e b5       	in	r24, 0x2e	; 46
 188:	88 60       	ori	r24, 0x08	; 8
 18a:	8e bd       	out	0x2e, r24	; 46
  TCCR1B |= (1 << CS12); // Prescaler auf 1024
 18c:	8e b5       	in	r24, 0x2e	; 46
 18e:	84 60       	ori	r24, 0x04	; 4
 190:	8e bd       	out	0x2e, r24	; 46
  TCCR1B |= (1 << CS10); // Prescaler auf 1024
 192:	8e b5       	in	r24, 0x2e	; 46
 194:	81 60       	ori	r24, 0x01	; 1
 196:	8e bd       	out	0x2e, r24	; 46
  TIMSK |= (1 << OCIE1A); // Interrupt auslösen wenn CTC-Match
 198:	89 b7       	in	r24, 0x39	; 57
 19a:	80 61       	ori	r24, 0x10	; 16
 19c:	89 bf       	out	0x39, r24	; 57
  OCR1A = 15624; //Schwellenwert für CTC
 19e:	88 e0       	ldi	r24, 0x08	; 8
 1a0:	9d e3       	ldi	r25, 0x3D	; 61
 1a2:	9b bd       	out	0x2b, r25	; 43
 1a4:	8a bd       	out	0x2a, r24	; 42
 1a6:	08 95       	ret

000001a8 <main>:
void timer1_on();


int main (void)
{
  modus = 1;
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	80 93 69 00 	sts	0x0069, r24
  inverse = 0;
 1ae:	10 92 67 00 	sts	0x0067, r1
  DDRB = 0; //Port B auf Input setzen
 1b2:	17 ba       	out	0x17, r1	; 23
  PORTB = 0x0F; //Setze Pullup Wiederstände im Atmel für Taster (gibt 5V auf den Ausgang die die Schalter dann gegen Ground schalten)
 1b4:	8f e0       	ldi	r24, 0x0F	; 15
 1b6:	88 bb       	out	0x18, r24	; 24
  DDRC = 0xFF; //Port C auf Output setzen 
 1b8:	8f ef       	ldi	r24, 0xFF	; 255
 1ba:	84 bb       	out	0x14, r24	; 20
  srand(121); //randomseed initialisieren
 1bc:	89 e7       	ldi	r24, 0x79	; 121
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	0e 94 b3 01 	call	0x366	; 0x366 <srand>
  sekunden = rand() % 60; //sekunden auf einen Wert setzen
 1c4:	0e 94 ae 01 	call	0x35c	; 0x35c <rand>
 1c8:	6c e3       	ldi	r22, 0x3C	; 60
 1ca:	70 e0       	ldi	r23, 0x00	; 0
 1cc:	0e 94 36 01 	call	0x26c	; 0x26c <__divmodhi4>
 1d0:	80 93 65 00 	sts	0x0065, r24
  minuten = rand() % 60; //minuten ebenso
 1d4:	0e 94 ae 01 	call	0x35c	; 0x35c <rand>
 1d8:	6c e3       	ldi	r22, 0x3C	; 60
 1da:	70 e0       	ldi	r23, 0x00	; 0
 1dc:	0e 94 36 01 	call	0x26c	; 0x26c <__divmodhi4>
 1e0:	80 93 66 00 	sts	0x0066, r24
  stunden = rand() % 24; //stunden eh
 1e4:	0e 94 ae 01 	call	0x35c	; 0x35c <rand>
 1e8:	68 e1       	ldi	r22, 0x18	; 24
 1ea:	70 e0       	ldi	r23, 0x00	; 0
 1ec:	0e 94 36 01 	call	0x26c	; 0x26c <__divmodhi4>
 1f0:	80 93 68 00 	sts	0x0068, r24
  timer0_on(); //schalte Timer0 an
 1f4:	0e 94 b4 00 	call	0x168	; 0x168 <timer0_on>
  timer1_on(); //schalte Timer1 an
 1f8:	0e 94 c3 00 	call	0x186	; 0x186 <timer1_on>
  sei(); //Schaltet Interrupts an
 1fc:	78 94       	sei
  
  while(42) {
   switch(inverse){
 1fe:	80 91 67 00 	lds	r24, 0x0067
 202:	88 23       	and	r24, r24
 204:	19 f0       	breq	.+6      	; 0x20c <main+0x64>
 206:	81 30       	cpi	r24, 0x01	; 1
 208:	d1 f7       	brne	.-12     	; 0x1fe <main+0x56>
 20a:	11 c0       	rjmp	.+34     	; 0x22e <main+0x86>
     case 0:
        switch(modus){
 20c:	80 91 69 00 	lds	r24, 0x0069
 210:	82 30       	cpi	r24, 0x02	; 2
 212:	39 f0       	breq	.+14     	; 0x222 <main+0x7a>
 214:	83 30       	cpi	r24, 0x03	; 3
 216:	41 f0       	breq	.+16     	; 0x228 <main+0x80>
 218:	81 30       	cpi	r24, 0x01	; 1
 21a:	89 f7       	brne	.-30     	; 0x1fe <main+0x56>
          case 1:
            PORTC= sekunden;
 21c:	80 91 65 00 	lds	r24, 0x0065
 220:	17 c0       	rjmp	.+46     	; 0x250 <main+0xa8>
            break;
          case 2:
            PORTC= minuten;
 222:	80 91 66 00 	lds	r24, 0x0066
 226:	14 c0       	rjmp	.+40     	; 0x250 <main+0xa8>
            break;
          case 3:
            PORTC= stunden;
 228:	80 91 68 00 	lds	r24, 0x0068
 22c:	11 c0       	rjmp	.+34     	; 0x250 <main+0xa8>
            break;
        }
        break;
    case 1:
        switch(modus){
 22e:	80 91 69 00 	lds	r24, 0x0069
 232:	82 30       	cpi	r24, 0x02	; 2
 234:	39 f0       	breq	.+14     	; 0x244 <main+0x9c>
 236:	83 30       	cpi	r24, 0x03	; 3
 238:	41 f0       	breq	.+16     	; 0x24a <main+0xa2>
 23a:	81 30       	cpi	r24, 0x01	; 1
 23c:	01 f7       	brne	.-64     	; 0x1fe <main+0x56>
          case 1:
            PORTC = (sekunden^0xFF);
 23e:	80 91 65 00 	lds	r24, 0x0065
 242:	05 c0       	rjmp	.+10     	; 0x24e <main+0xa6>
            break;
          case 2:
            PORTC = (minuten^0xFF);
 244:	80 91 66 00 	lds	r24, 0x0066
 248:	02 c0       	rjmp	.+4      	; 0x24e <main+0xa6>
            break;
          case 3:
            PORTC = (stunden^0xFF);
 24a:	80 91 68 00 	lds	r24, 0x0068
 24e:	80 95       	com	r24
 250:	85 bb       	out	0x15, r24	; 21
 252:	d5 cf       	rjmp	.-86     	; 0x1fe <main+0x56>

00000254 <__udivmodqi4>:
 254:	99 1b       	sub	r25, r25
 256:	79 e0       	ldi	r23, 0x09	; 9
 258:	04 c0       	rjmp	.+8      	; 0x262 <__udivmodqi4_ep>

0000025a <__udivmodqi4_loop>:
 25a:	99 1f       	adc	r25, r25
 25c:	96 17       	cp	r25, r22
 25e:	08 f0       	brcs	.+2      	; 0x262 <__udivmodqi4_ep>
 260:	96 1b       	sub	r25, r22

00000262 <__udivmodqi4_ep>:
 262:	88 1f       	adc	r24, r24
 264:	7a 95       	dec	r23
 266:	c9 f7       	brne	.-14     	; 0x25a <__udivmodqi4_loop>
 268:	80 95       	com	r24
 26a:	08 95       	ret

0000026c <__divmodhi4>:
 26c:	97 fb       	bst	r25, 7
 26e:	09 2e       	mov	r0, r25
 270:	07 26       	eor	r0, r23
 272:	0a d0       	rcall	.+20     	; 0x288 <__divmodhi4_neg1>
 274:	77 fd       	sbrc	r23, 7
 276:	04 d0       	rcall	.+8      	; 0x280 <__divmodhi4_neg2>
 278:	0c d0       	rcall	.+24     	; 0x292 <__udivmodhi4>
 27a:	06 d0       	rcall	.+12     	; 0x288 <__divmodhi4_neg1>
 27c:	00 20       	and	r0, r0
 27e:	1a f4       	brpl	.+6      	; 0x286 <__divmodhi4_exit>

00000280 <__divmodhi4_neg2>:
 280:	70 95       	com	r23
 282:	61 95       	neg	r22
 284:	7f 4f       	sbci	r23, 0xFF	; 255

00000286 <__divmodhi4_exit>:
 286:	08 95       	ret

00000288 <__divmodhi4_neg1>:
 288:	f6 f7       	brtc	.-4      	; 0x286 <__divmodhi4_exit>
 28a:	90 95       	com	r25
 28c:	81 95       	neg	r24
 28e:	9f 4f       	sbci	r25, 0xFF	; 255
 290:	08 95       	ret

00000292 <__udivmodhi4>:
 292:	aa 1b       	sub	r26, r26
 294:	bb 1b       	sub	r27, r27
 296:	51 e1       	ldi	r21, 0x11	; 17
 298:	07 c0       	rjmp	.+14     	; 0x2a8 <__udivmodhi4_ep>

0000029a <__udivmodhi4_loop>:
 29a:	aa 1f       	adc	r26, r26
 29c:	bb 1f       	adc	r27, r27
 29e:	a6 17       	cp	r26, r22
 2a0:	b7 07       	cpc	r27, r23
 2a2:	10 f0       	brcs	.+4      	; 0x2a8 <__udivmodhi4_ep>
 2a4:	a6 1b       	sub	r26, r22
 2a6:	b7 0b       	sbc	r27, r23

000002a8 <__udivmodhi4_ep>:
 2a8:	88 1f       	adc	r24, r24
 2aa:	99 1f       	adc	r25, r25
 2ac:	5a 95       	dec	r21
 2ae:	a9 f7       	brne	.-22     	; 0x29a <__udivmodhi4_loop>
 2b0:	80 95       	com	r24
 2b2:	90 95       	com	r25
 2b4:	bc 01       	movw	r22, r24
 2b6:	cd 01       	movw	r24, r26
 2b8:	08 95       	ret

000002ba <do_rand>:
 2ba:	a0 e0       	ldi	r26, 0x00	; 0
 2bc:	b0 e0       	ldi	r27, 0x00	; 0
 2be:	e3 e6       	ldi	r30, 0x63	; 99
 2c0:	f1 e0       	ldi	r31, 0x01	; 1
 2c2:	0c 94 00 02 	jmp	0x400	; 0x400 <__prologue_saves__+0x10>
 2c6:	ec 01       	movw	r28, r24
 2c8:	a8 80       	ld	r10, Y
 2ca:	b9 80       	ldd	r11, Y+1	; 0x01
 2cc:	ca 80       	ldd	r12, Y+2	; 0x02
 2ce:	db 80       	ldd	r13, Y+3	; 0x03
 2d0:	a1 14       	cp	r10, r1
 2d2:	b1 04       	cpc	r11, r1
 2d4:	c1 04       	cpc	r12, r1
 2d6:	d1 04       	cpc	r13, r1
 2d8:	41 f4       	brne	.+16     	; 0x2ea <do_rand+0x30>
 2da:	84 e2       	ldi	r24, 0x24	; 36
 2dc:	a8 2e       	mov	r10, r24
 2de:	89 ed       	ldi	r24, 0xD9	; 217
 2e0:	b8 2e       	mov	r11, r24
 2e2:	8b e5       	ldi	r24, 0x5B	; 91
 2e4:	c8 2e       	mov	r12, r24
 2e6:	87 e0       	ldi	r24, 0x07	; 7
 2e8:	d8 2e       	mov	r13, r24
 2ea:	c6 01       	movw	r24, r12
 2ec:	b5 01       	movw	r22, r10
 2ee:	2d e1       	ldi	r18, 0x1D	; 29
 2f0:	33 ef       	ldi	r19, 0xF3	; 243
 2f2:	41 e0       	ldi	r20, 0x01	; 1
 2f4:	50 e0       	ldi	r21, 0x00	; 0
 2f6:	0e 94 dd 01 	call	0x3ba	; 0x3ba <__divmodsi4>
 2fa:	27 ea       	ldi	r18, 0xA7	; 167
 2fc:	31 e4       	ldi	r19, 0x41	; 65
 2fe:	40 e0       	ldi	r20, 0x00	; 0
 300:	50 e0       	ldi	r21, 0x00	; 0
 302:	0e 94 be 01 	call	0x37c	; 0x37c <__mulsi3>
 306:	7b 01       	movw	r14, r22
 308:	8c 01       	movw	r16, r24
 30a:	c6 01       	movw	r24, r12
 30c:	b5 01       	movw	r22, r10
 30e:	2d e1       	ldi	r18, 0x1D	; 29
 310:	33 ef       	ldi	r19, 0xF3	; 243
 312:	41 e0       	ldi	r20, 0x01	; 1
 314:	50 e0       	ldi	r21, 0x00	; 0
 316:	0e 94 dd 01 	call	0x3ba	; 0x3ba <__divmodsi4>
 31a:	ca 01       	movw	r24, r20
 31c:	b9 01       	movw	r22, r18
 31e:	2c ee       	ldi	r18, 0xEC	; 236
 320:	34 ef       	ldi	r19, 0xF4	; 244
 322:	4f ef       	ldi	r20, 0xFF	; 255
 324:	5f ef       	ldi	r21, 0xFF	; 255
 326:	0e 94 be 01 	call	0x37c	; 0x37c <__mulsi3>
 32a:	6e 0d       	add	r22, r14
 32c:	7f 1d       	adc	r23, r15
 32e:	80 1f       	adc	r24, r16
 330:	91 1f       	adc	r25, r17
 332:	97 ff       	sbrs	r25, 7
 334:	04 c0       	rjmp	.+8      	; 0x33e <do_rand+0x84>
 336:	61 50       	subi	r22, 0x01	; 1
 338:	70 40       	sbci	r23, 0x00	; 0
 33a:	80 40       	sbci	r24, 0x00	; 0
 33c:	90 48       	sbci	r25, 0x80	; 128
 33e:	68 83       	st	Y, r22
 340:	79 83       	std	Y+1, r23	; 0x01
 342:	8a 83       	std	Y+2, r24	; 0x02
 344:	9b 83       	std	Y+3, r25	; 0x03
 346:	9b 01       	movw	r18, r22
 348:	3f 77       	andi	r19, 0x7F	; 127
 34a:	c9 01       	movw	r24, r18
 34c:	cd b7       	in	r28, 0x3d	; 61
 34e:	de b7       	in	r29, 0x3e	; 62
 350:	ea e0       	ldi	r30, 0x0A	; 10
 352:	0c 94 1c 02 	jmp	0x438	; 0x438 <__epilogue_restores__+0x10>

00000356 <rand_r>:
 356:	0e 94 5d 01 	call	0x2ba	; 0x2ba <do_rand>
 35a:	08 95       	ret

0000035c <rand>:
 35c:	80 e6       	ldi	r24, 0x60	; 96
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	0e 94 5d 01 	call	0x2ba	; 0x2ba <do_rand>
 364:	08 95       	ret

00000366 <srand>:
 366:	a0 e0       	ldi	r26, 0x00	; 0
 368:	b0 e0       	ldi	r27, 0x00	; 0
 36a:	80 93 60 00 	sts	0x0060, r24
 36e:	90 93 61 00 	sts	0x0061, r25
 372:	a0 93 62 00 	sts	0x0062, r26
 376:	b0 93 63 00 	sts	0x0063, r27
 37a:	08 95       	ret

0000037c <__mulsi3>:
 37c:	62 9f       	mul	r22, r18
 37e:	d0 01       	movw	r26, r0
 380:	73 9f       	mul	r23, r19
 382:	f0 01       	movw	r30, r0
 384:	82 9f       	mul	r24, r18
 386:	e0 0d       	add	r30, r0
 388:	f1 1d       	adc	r31, r1
 38a:	64 9f       	mul	r22, r20
 38c:	e0 0d       	add	r30, r0
 38e:	f1 1d       	adc	r31, r1
 390:	92 9f       	mul	r25, r18
 392:	f0 0d       	add	r31, r0
 394:	83 9f       	mul	r24, r19
 396:	f0 0d       	add	r31, r0
 398:	74 9f       	mul	r23, r20
 39a:	f0 0d       	add	r31, r0
 39c:	65 9f       	mul	r22, r21
 39e:	f0 0d       	add	r31, r0
 3a0:	99 27       	eor	r25, r25
 3a2:	72 9f       	mul	r23, r18
 3a4:	b0 0d       	add	r27, r0
 3a6:	e1 1d       	adc	r30, r1
 3a8:	f9 1f       	adc	r31, r25
 3aa:	63 9f       	mul	r22, r19
 3ac:	b0 0d       	add	r27, r0
 3ae:	e1 1d       	adc	r30, r1
 3b0:	f9 1f       	adc	r31, r25
 3b2:	bd 01       	movw	r22, r26
 3b4:	cf 01       	movw	r24, r30
 3b6:	11 24       	eor	r1, r1
 3b8:	08 95       	ret

000003ba <__divmodsi4>:
 3ba:	97 fb       	bst	r25, 7
 3bc:	09 2e       	mov	r0, r25
 3be:	05 26       	eor	r0, r21
 3c0:	0e d0       	rcall	.+28     	; 0x3de <__divmodsi4_neg1>
 3c2:	57 fd       	sbrc	r21, 7
 3c4:	04 d0       	rcall	.+8      	; 0x3ce <__divmodsi4_neg2>
 3c6:	4b d0       	rcall	.+150    	; 0x45e <__udivmodsi4>
 3c8:	0a d0       	rcall	.+20     	; 0x3de <__divmodsi4_neg1>
 3ca:	00 1c       	adc	r0, r0
 3cc:	38 f4       	brcc	.+14     	; 0x3dc <__divmodsi4_exit>

000003ce <__divmodsi4_neg2>:
 3ce:	50 95       	com	r21
 3d0:	40 95       	com	r20
 3d2:	30 95       	com	r19
 3d4:	21 95       	neg	r18
 3d6:	3f 4f       	sbci	r19, 0xFF	; 255
 3d8:	4f 4f       	sbci	r20, 0xFF	; 255
 3da:	5f 4f       	sbci	r21, 0xFF	; 255

000003dc <__divmodsi4_exit>:
 3dc:	08 95       	ret

000003de <__divmodsi4_neg1>:
 3de:	f6 f7       	brtc	.-4      	; 0x3dc <__divmodsi4_exit>
 3e0:	90 95       	com	r25
 3e2:	80 95       	com	r24
 3e4:	70 95       	com	r23
 3e6:	61 95       	neg	r22
 3e8:	7f 4f       	sbci	r23, 0xFF	; 255
 3ea:	8f 4f       	sbci	r24, 0xFF	; 255
 3ec:	9f 4f       	sbci	r25, 0xFF	; 255
 3ee:	08 95       	ret

000003f0 <__prologue_saves__>:
 3f0:	2f 92       	push	r2
 3f2:	3f 92       	push	r3
 3f4:	4f 92       	push	r4
 3f6:	5f 92       	push	r5
 3f8:	6f 92       	push	r6
 3fa:	7f 92       	push	r7
 3fc:	8f 92       	push	r8
 3fe:	9f 92       	push	r9
 400:	af 92       	push	r10
 402:	bf 92       	push	r11
 404:	cf 92       	push	r12
 406:	df 92       	push	r13
 408:	ef 92       	push	r14
 40a:	ff 92       	push	r15
 40c:	0f 93       	push	r16
 40e:	1f 93       	push	r17
 410:	cf 93       	push	r28
 412:	df 93       	push	r29
 414:	cd b7       	in	r28, 0x3d	; 61
 416:	de b7       	in	r29, 0x3e	; 62
 418:	ca 1b       	sub	r28, r26
 41a:	db 0b       	sbc	r29, r27
 41c:	0f b6       	in	r0, 0x3f	; 63
 41e:	f8 94       	cli
 420:	de bf       	out	0x3e, r29	; 62
 422:	0f be       	out	0x3f, r0	; 63
 424:	cd bf       	out	0x3d, r28	; 61
 426:	09 94       	ijmp

00000428 <__epilogue_restores__>:
 428:	2a 88       	ldd	r2, Y+18	; 0x12
 42a:	39 88       	ldd	r3, Y+17	; 0x11
 42c:	48 88       	ldd	r4, Y+16	; 0x10
 42e:	5f 84       	ldd	r5, Y+15	; 0x0f
 430:	6e 84       	ldd	r6, Y+14	; 0x0e
 432:	7d 84       	ldd	r7, Y+13	; 0x0d
 434:	8c 84       	ldd	r8, Y+12	; 0x0c
 436:	9b 84       	ldd	r9, Y+11	; 0x0b
 438:	aa 84       	ldd	r10, Y+10	; 0x0a
 43a:	b9 84       	ldd	r11, Y+9	; 0x09
 43c:	c8 84       	ldd	r12, Y+8	; 0x08
 43e:	df 80       	ldd	r13, Y+7	; 0x07
 440:	ee 80       	ldd	r14, Y+6	; 0x06
 442:	fd 80       	ldd	r15, Y+5	; 0x05
 444:	0c 81       	ldd	r16, Y+4	; 0x04
 446:	1b 81       	ldd	r17, Y+3	; 0x03
 448:	aa 81       	ldd	r26, Y+2	; 0x02
 44a:	b9 81       	ldd	r27, Y+1	; 0x01
 44c:	ce 0f       	add	r28, r30
 44e:	d1 1d       	adc	r29, r1
 450:	0f b6       	in	r0, 0x3f	; 63
 452:	f8 94       	cli
 454:	de bf       	out	0x3e, r29	; 62
 456:	0f be       	out	0x3f, r0	; 63
 458:	cd bf       	out	0x3d, r28	; 61
 45a:	ed 01       	movw	r28, r26
 45c:	08 95       	ret

0000045e <__udivmodsi4>:
 45e:	a1 e2       	ldi	r26, 0x21	; 33
 460:	1a 2e       	mov	r1, r26
 462:	aa 1b       	sub	r26, r26
 464:	bb 1b       	sub	r27, r27
 466:	fd 01       	movw	r30, r26
 468:	0d c0       	rjmp	.+26     	; 0x484 <__udivmodsi4_ep>

0000046a <__udivmodsi4_loop>:
 46a:	aa 1f       	adc	r26, r26
 46c:	bb 1f       	adc	r27, r27
 46e:	ee 1f       	adc	r30, r30
 470:	ff 1f       	adc	r31, r31
 472:	a2 17       	cp	r26, r18
 474:	b3 07       	cpc	r27, r19
 476:	e4 07       	cpc	r30, r20
 478:	f5 07       	cpc	r31, r21
 47a:	20 f0       	brcs	.+8      	; 0x484 <__udivmodsi4_ep>
 47c:	a2 1b       	sub	r26, r18
 47e:	b3 0b       	sbc	r27, r19
 480:	e4 0b       	sbc	r30, r20
 482:	f5 0b       	sbc	r31, r21

00000484 <__udivmodsi4_ep>:
 484:	66 1f       	adc	r22, r22
 486:	77 1f       	adc	r23, r23
 488:	88 1f       	adc	r24, r24
 48a:	99 1f       	adc	r25, r25
 48c:	1a 94       	dec	r1
 48e:	69 f7       	brne	.-38     	; 0x46a <__udivmodsi4_loop>
 490:	60 95       	com	r22
 492:	70 95       	com	r23
 494:	80 95       	com	r24
 496:	90 95       	com	r25
 498:	9b 01       	movw	r18, r22
 49a:	ac 01       	movw	r20, r24
 49c:	bd 01       	movw	r22, r26
 49e:	cf 01       	movw	r24, r30
 4a0:	08 95       	ret

000004a2 <_exit>:
 4a2:	f8 94       	cli

000004a4 <__stop_program>:
 4a4:	ff cf       	rjmp	.-2      	; 0x4a4 <__stop_program>
